name: Unix

on:
  push:
    branches:
      - main
  pull_request:

env:
  BUILD_TYPE: Release
  MQTT_BROKER_URI: ${{ secrets.MQTT_BROKER_URI }}
  MQTT_BROKER_PORT: ${{ secrets.MQTT_BROKER_PORT }}
  KAFKA_BROKER_URI: ${{ secrets.KAFKA_BROKER_URI }}
  KAFKA_TOPIC_PREFIX: ${{ secrets.KAFKA_TOPIC_PREFIX }}
  KAFKA_SASL_MECHANISM: ${{ secrets.KAFKA_SASL_MECHANISM }}
  KAFKA_SECURITY_PROTOCOL: ${{ secrets.KAFKA_SECURITY_PROTOCOL }}
  KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
  KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}

jobs:
  build:

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "macOS 11.0 AppleClang 12 [Release]",
            os: macos-11.0,
            cxx: "clang++"
          }
          - {
            name: "macOS 11.0 GCC 10 [Release]",
            os: macos-11.0,
            cxx: "g++-10"
          }
          - {
            name: "Ubuntu 20.04 Clang 11 [Release]",
            os: ubuntu-20.04,
            cxx: "clang++-11"
          }
          - {
            name: "Ubuntu 20.04 GCC 10 [Release]",
            os: ubuntu-20.04,
            cxx: "g++-10"
          }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Get macOS Concurrency
      if: runner.os == 'macOS'
      run: |
        echo NPROC="sysctl -n hw.ncpu" >> $GITHUB_ENV
        echo "Running on $(sysctl -n hw.ncpu) threads ..."

    - name: Get Linux Concurrency
      if: runner.os == 'Linux'
      run: |
        echo NPROC="nproc" >> $GITHUB_ENV
        echo "Running on $(nproc) threads ..."

    - name: Set Up macOS Dependencies
      if: runner.os == 'macOS'
      run: |
        brew install ninja gcc@10 rapidjson mosquitto
        export PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig
        brew services start mosquitto
        if [ ${{matrix.config.cxx}} == "g++-10" ]
        then
          HOMEBREW_CXX=g++-10 HOMEBREW_CC=gcc-10 brew install librdkafka --build-from-source
        else
          brew install librdkafka
        fi

    - name: Set Up Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt install -y cmake ninja-build pkg-config clang-11 g++-10 mosquitto libmosquitto-dev rapidjson-dev librdkafka-dev

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake ${{runner.workspace}}/opera -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}} -G Ninja

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel $($NPROC)

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: ctest -j $($NPROC) --output-on-failure